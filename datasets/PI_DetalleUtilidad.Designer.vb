'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PI_DetalleUtilidad"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PI_DetalleUtilidad
    Inherits Global.System.Data.DataSet
    
    Private tableUP_Consulta_DetalleUtilidadReal As UP_Consulta_DetalleUtilidadRealDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("UP_Consulta_DetalleUtilidadReal")) Is Nothing) Then
                MyBase.Tables.Add(New UP_Consulta_DetalleUtilidadRealDataTable(ds.Tables("UP_Consulta_DetalleUtilidadReal")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property UP_Consulta_DetalleUtilidadReal() As UP_Consulta_DetalleUtilidadRealDataTable
        Get
            Return Me.tableUP_Consulta_DetalleUtilidadReal
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PI_DetalleUtilidad = CType(MyBase.Clone,PI_DetalleUtilidad)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("UP_Consulta_DetalleUtilidadReal")) Is Nothing) Then
                MyBase.Tables.Add(New UP_Consulta_DetalleUtilidadRealDataTable(ds.Tables("UP_Consulta_DetalleUtilidadReal")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableUP_Consulta_DetalleUtilidadReal = CType(MyBase.Tables("UP_Consulta_DetalleUtilidadReal"),UP_Consulta_DetalleUtilidadRealDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUP_Consulta_DetalleUtilidadReal) Is Nothing) Then
                Me.tableUP_Consulta_DetalleUtilidadReal.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "PI_DetalleUtilidad"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PI_DetalleUtilidad.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableUP_Consulta_DetalleUtilidadReal = New UP_Consulta_DetalleUtilidadRealDataTable
        MyBase.Tables.Add(Me.tableUP_Consulta_DetalleUtilidadReal)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeUP_Consulta_DetalleUtilidadReal() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PI_DetalleUtilidad = New PI_DetalleUtilidad
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub UP_Consulta_DetalleUtilidadRealRowChangeEventHandler(ByVal sender As Object, ByVal e As UP_Consulta_DetalleUtilidadRealRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UP_Consulta_DetalleUtilidadRealDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnSemana As Global.System.Data.DataColumn
        
        Private columnPeso As Global.System.Data.DataColumn
        
        Private columnTarifa As Global.System.Data.DataColumn
        
        Private columnSueldoOper As Global.System.Data.DataColumn
        
        Private columnManiobras As Global.System.Data.DataColumn
        
        Private columnGastosViaje As Global.System.Data.DataColumn
        
        Private columnCasetas As Global.System.Data.DataColumn
        
        Private columnFactorKM As Global.System.Data.DataColumn
        
        Private columnKMS As Global.System.Data.DataColumn
        
        Private columnFactorDia As Global.System.Data.DataColumn
        
        Private columndias As Global.System.Data.DataColumn
        
        Private columnDesctoRend As Global.System.Data.DataColumn
        
        Private columnDesctoReset As Global.System.Data.DataColumn
        
        Private columnUtilSinDcto As Global.System.Data.DataColumn
        
        Private columnUtilConDcto As Global.System.Data.DataColumn
        
        Private columnflete As Global.System.Data.DataColumn
        
        Private columnComision As Global.System.Data.DataColumn
        
        Private columnLitros As Global.System.Data.DataColumn
        
        Private columnCtoDiesel As Global.System.Data.DataColumn
        
        Private columnCtoTotDiesel As Global.System.Data.DataColumn
        
        Private columnPorcUtilSinDcto As Global.System.Data.DataColumn
        
        Private columnPorcUtilConDcto As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "UP_Consulta_DetalleUtilidadReal"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SemanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSemana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarifaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarifa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SueldoOperColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSueldoOper
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ManiobrasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManiobras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GastosViajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGastosViaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CasetasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCasetas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactorKMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorKM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FactorDiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorDia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property diasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DesctoRendColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesctoRend
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DesctoResetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesctoReset
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UtilSinDctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUtilSinDcto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UtilConDctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUtilConDcto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property fleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnflete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ComisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LitrosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLitros
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CtoDieselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCtoDiesel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CtoTotDieselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCtoTotDiesel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcUtilSinDctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcUtilSinDcto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcUtilConDctoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcUtilConDcto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UP_Consulta_DetalleUtilidadRealRow
            Get
                Return CType(Me.Rows(index),UP_Consulta_DetalleUtilidadRealRow)
            End Get
        End Property
        
        Public Event UP_Consulta_DetalleUtilidadRealRowChanging As UP_Consulta_DetalleUtilidadRealRowChangeEventHandler
        
        Public Event UP_Consulta_DetalleUtilidadRealRowChanged As UP_Consulta_DetalleUtilidadRealRowChangeEventHandler
        
        Public Event UP_Consulta_DetalleUtilidadRealRowDeleting As UP_Consulta_DetalleUtilidadRealRowChangeEventHandler
        
        Public Event UP_Consulta_DetalleUtilidadRealRowDeleted As UP_Consulta_DetalleUtilidadRealRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddUP_Consulta_DetalleUtilidadRealRow(ByVal row As UP_Consulta_DetalleUtilidadRealRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddUP_Consulta_DetalleUtilidadRealRow( _
                    ByVal Semana As Integer,  _
                    ByVal Peso As Decimal,  _
                    ByVal Tarifa As Decimal,  _
                    ByVal SueldoOper As Decimal,  _
                    ByVal Maniobras As Decimal,  _
                    ByVal GastosViaje As Decimal,  _
                    ByVal Casetas As Decimal,  _
                    ByVal FactorKM As Decimal,  _
                    ByVal KMS As Decimal,  _
                    ByVal FactorDia As Decimal,  _
                    ByVal dias As Integer,  _
                    ByVal DesctoRend As Decimal,  _
                    ByVal DesctoReset As Decimal,  _
                    ByVal UtilSinDcto As Decimal,  _
                    ByVal UtilConDcto As Decimal,  _
                    ByVal flete As Decimal,  _
                    ByVal Comision As Decimal,  _
                    ByVal Litros As Decimal,  _
                    ByVal CtoDiesel As Decimal,  _
                    ByVal CtoTotDiesel As Decimal,  _
                    ByVal PorcUtilSinDcto As Decimal,  _
                    ByVal PorcUtilConDcto As Decimal) As UP_Consulta_DetalleUtilidadRealRow
            Dim rowUP_Consulta_DetalleUtilidadRealRow As UP_Consulta_DetalleUtilidadRealRow = CType(Me.NewRow,UP_Consulta_DetalleUtilidadRealRow)
            Dim columnValuesArray() As Object = New Object() {Semana, Peso, Tarifa, SueldoOper, Maniobras, GastosViaje, Casetas, FactorKM, KMS, FactorDia, dias, DesctoRend, DesctoReset, UtilSinDcto, UtilConDcto, flete, Comision, Litros, CtoDiesel, CtoTotDiesel, PorcUtilSinDcto, PorcUtilConDcto}
            rowUP_Consulta_DetalleUtilidadRealRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUP_Consulta_DetalleUtilidadRealRow)
            Return rowUP_Consulta_DetalleUtilidadRealRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UP_Consulta_DetalleUtilidadRealDataTable = CType(MyBase.Clone,UP_Consulta_DetalleUtilidadRealDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UP_Consulta_DetalleUtilidadRealDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSemana = MyBase.Columns("Semana")
            Me.columnPeso = MyBase.Columns("Peso")
            Me.columnTarifa = MyBase.Columns("Tarifa")
            Me.columnSueldoOper = MyBase.Columns("SueldoOper")
            Me.columnManiobras = MyBase.Columns("Maniobras")
            Me.columnGastosViaje = MyBase.Columns("GastosViaje")
            Me.columnCasetas = MyBase.Columns("Casetas")
            Me.columnFactorKM = MyBase.Columns("FactorKM")
            Me.columnKMS = MyBase.Columns("KMS")
            Me.columnFactorDia = MyBase.Columns("FactorDia")
            Me.columndias = MyBase.Columns("dias")
            Me.columnDesctoRend = MyBase.Columns("DesctoRend")
            Me.columnDesctoReset = MyBase.Columns("DesctoReset")
            Me.columnUtilSinDcto = MyBase.Columns("UtilSinDcto")
            Me.columnUtilConDcto = MyBase.Columns("UtilConDcto")
            Me.columnflete = MyBase.Columns("flete")
            Me.columnComision = MyBase.Columns("Comision")
            Me.columnLitros = MyBase.Columns("Litros")
            Me.columnCtoDiesel = MyBase.Columns("CtoDiesel")
            Me.columnCtoTotDiesel = MyBase.Columns("CtoTotDiesel")
            Me.columnPorcUtilSinDcto = MyBase.Columns("PorcUtilSinDcto")
            Me.columnPorcUtilConDcto = MyBase.Columns("PorcUtilConDcto")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSemana = New Global.System.Data.DataColumn("Semana", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSemana)
            Me.columnPeso = New Global.System.Data.DataColumn("Peso", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeso)
            Me.columnTarifa = New Global.System.Data.DataColumn("Tarifa", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarifa)
            Me.columnSueldoOper = New Global.System.Data.DataColumn("SueldoOper", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSueldoOper)
            Me.columnManiobras = New Global.System.Data.DataColumn("Maniobras", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManiobras)
            Me.columnGastosViaje = New Global.System.Data.DataColumn("GastosViaje", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGastosViaje)
            Me.columnCasetas = New Global.System.Data.DataColumn("Casetas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCasetas)
            Me.columnFactorKM = New Global.System.Data.DataColumn("FactorKM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorKM)
            Me.columnKMS = New Global.System.Data.DataColumn("KMS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKMS)
            Me.columnFactorDia = New Global.System.Data.DataColumn("FactorDia", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorDia)
            Me.columndias = New Global.System.Data.DataColumn("dias", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndias)
            Me.columnDesctoRend = New Global.System.Data.DataColumn("DesctoRend", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesctoRend)
            Me.columnDesctoReset = New Global.System.Data.DataColumn("DesctoReset", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesctoReset)
            Me.columnUtilSinDcto = New Global.System.Data.DataColumn("UtilSinDcto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUtilSinDcto)
            Me.columnUtilConDcto = New Global.System.Data.DataColumn("UtilConDcto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUtilConDcto)
            Me.columnflete = New Global.System.Data.DataColumn("flete", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflete)
            Me.columnComision = New Global.System.Data.DataColumn("Comision", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComision)
            Me.columnLitros = New Global.System.Data.DataColumn("Litros", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLitros)
            Me.columnCtoDiesel = New Global.System.Data.DataColumn("CtoDiesel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCtoDiesel)
            Me.columnCtoTotDiesel = New Global.System.Data.DataColumn("CtoTotDiesel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCtoTotDiesel)
            Me.columnPorcUtilSinDcto = New Global.System.Data.DataColumn("PorcUtilSinDcto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcUtilSinDcto)
            Me.columnPorcUtilConDcto = New Global.System.Data.DataColumn("PorcUtilConDcto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcUtilConDcto)
            Me.columnComision.ReadOnly = true
            Me.columnCtoDiesel.ReadOnly = true
            Me.columnCtoTotDiesel.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewUP_Consulta_DetalleUtilidadRealRow() As UP_Consulta_DetalleUtilidadRealRow
            Return CType(Me.NewRow,UP_Consulta_DetalleUtilidadRealRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UP_Consulta_DetalleUtilidadRealRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UP_Consulta_DetalleUtilidadRealRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UP_Consulta_DetalleUtilidadRealRowChangedEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_DetalleUtilidadRealRowChanged(Me, New UP_Consulta_DetalleUtilidadRealRowChangeEvent(CType(e.Row,UP_Consulta_DetalleUtilidadRealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UP_Consulta_DetalleUtilidadRealRowChangingEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_DetalleUtilidadRealRowChanging(Me, New UP_Consulta_DetalleUtilidadRealRowChangeEvent(CType(e.Row,UP_Consulta_DetalleUtilidadRealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UP_Consulta_DetalleUtilidadRealRowDeletedEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_DetalleUtilidadRealRowDeleted(Me, New UP_Consulta_DetalleUtilidadRealRowChangeEvent(CType(e.Row,UP_Consulta_DetalleUtilidadRealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UP_Consulta_DetalleUtilidadRealRowDeletingEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_DetalleUtilidadRealRowDeleting(Me, New UP_Consulta_DetalleUtilidadRealRowChangeEvent(CType(e.Row,UP_Consulta_DetalleUtilidadRealRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveUP_Consulta_DetalleUtilidadRealRow(ByVal row As UP_Consulta_DetalleUtilidadRealRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As PI_DetalleUtilidad = New PI_DetalleUtilidad
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UP_Consulta_DetalleUtilidadRealDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class UP_Consulta_DetalleUtilidadRealRow
        Inherits Global.System.Data.DataRow
        
        Private tableUP_Consulta_DetalleUtilidadReal As UP_Consulta_DetalleUtilidadRealDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUP_Consulta_DetalleUtilidadReal = CType(Me.Table,UP_Consulta_DetalleUtilidadRealDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Semana() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.SemanaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Semana' in table 'UP_Consulta_DetalleUtilidadReal' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.SemanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Peso() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.PesoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Peso' in table 'UP_Consulta_DetalleUtilidadReal' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.PesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarifa() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.TarifaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarifa' in table 'UP_Consulta_DetalleUtilidadReal' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.TarifaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SueldoOper() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.SueldoOperColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SueldoOper' in table 'UP_Consulta_DetalleUtilidadReal' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.SueldoOperColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Maniobras() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.ManiobrasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Maniobras' in table 'UP_Consulta_DetalleUtilidadReal' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.ManiobrasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GastosViaje() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.GastosViajeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GastosViaje' in table 'UP_Consulta_DetalleUtilidadReal' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.GastosViajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Casetas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.CasetasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Casetas' in table 'UP_Consulta_DetalleUtilidadReal' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.CasetasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactorKM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.FactorKMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorKM' in table 'UP_Consulta_DetalleUtilidadReal' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.FactorKMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KMS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.KMSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KMS' in table 'UP_Consulta_DetalleUtilidadReal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.KMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FactorDia() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.FactorDiaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorDia' in table 'UP_Consulta_DetalleUtilidadReal' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.FactorDiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property dias() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.diasColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dias' in table 'UP_Consulta_DetalleUtilidadReal' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.diasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DesctoRend() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoRendColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesctoRend' in table 'UP_Consulta_DetalleUtilidadReal' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoRendColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DesctoReset() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoResetColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesctoReset' in table 'UP_Consulta_DetalleUtilidadReal' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoResetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UtilSinDcto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.UtilSinDctoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UtilSinDcto' in table 'UP_Consulta_DetalleUtilidadReal' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.UtilSinDctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UtilConDcto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.UtilConDctoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UtilConDcto' in table 'UP_Consulta_DetalleUtilidadReal' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.UtilConDctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property flete() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.fleteColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flete' in table 'UP_Consulta_DetalleUtilidadReal' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.fleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comision() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.ComisionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comision' in table 'UP_Consulta_DetalleUtilidadReal' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.ComisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Litros() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.LitrosColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Litros' in table 'UP_Consulta_DetalleUtilidadReal' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.LitrosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CtoDiesel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.CtoDieselColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CtoDiesel' in table 'UP_Consulta_DetalleUtilidadReal' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.CtoDieselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CtoTotDiesel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.CtoTotDieselColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CtoTotDiesel' in table 'UP_Consulta_DetalleUtilidadReal' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.CtoTotDieselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcUtilSinDcto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilSinDctoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcUtilSinDcto' in table 'UP_Consulta_DetalleUtilidadReal'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilSinDctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcUtilConDcto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilConDctoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcUtilConDcto' in table 'UP_Consulta_DetalleUtilidadReal'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilConDctoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSemanaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.SemanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSemanaNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.SemanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPesoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.PesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPesoNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.PesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarifaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.TarifaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarifaNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.TarifaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSueldoOperNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.SueldoOperColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSueldoOperNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.SueldoOperColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsManiobrasNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.ManiobrasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetManiobrasNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.ManiobrasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGastosViajeNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.GastosViajeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGastosViajeNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.GastosViajeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCasetasNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.CasetasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCasetasNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.CasetasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFactorKMNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.FactorKMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFactorKMNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.FactorKMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKMSNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.KMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKMSNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.KMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFactorDiaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.FactorDiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFactorDiaNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.FactorDiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdiasNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.diasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdiasNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.diasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesctoRendNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoRendColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesctoRendNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoRendColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDesctoResetNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoResetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDesctoResetNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.DesctoResetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUtilSinDctoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.UtilSinDctoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUtilSinDctoNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.UtilSinDctoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUtilConDctoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.UtilConDctoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUtilConDctoNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.UtilConDctoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfleteNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.fleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfleteNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.fleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsComisionNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.ComisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetComisionNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.ComisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLitrosNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.LitrosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLitrosNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.LitrosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCtoDieselNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.CtoDieselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCtoDieselNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.CtoDieselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCtoTotDieselNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.CtoTotDieselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCtoTotDieselNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.CtoTotDieselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcUtilSinDctoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilSinDctoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcUtilSinDctoNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilSinDctoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcUtilConDctoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilConDctoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcUtilConDctoNull()
            Me(Me.tableUP_Consulta_DetalleUtilidadReal.PorcUtilConDctoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class UP_Consulta_DetalleUtilidadRealRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UP_Consulta_DetalleUtilidadRealRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As UP_Consulta_DetalleUtilidadRealRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As UP_Consulta_DetalleUtilidadRealRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PI_DetalleUtilidadTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UP_Consulta_DetalleUtilidadRealTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "UP_Consulta_DetalleUtilidadReal"
            tableMapping.ColumnMappings.Add("Semana", "Semana")
            tableMapping.ColumnMappings.Add("Peso", "Peso")
            tableMapping.ColumnMappings.Add("Tarifa", "Tarifa")
            tableMapping.ColumnMappings.Add("SueldoOper", "SueldoOper")
            tableMapping.ColumnMappings.Add("Maniobras", "Maniobras")
            tableMapping.ColumnMappings.Add("GastosViaje", "GastosViaje")
            tableMapping.ColumnMappings.Add("Casetas", "Casetas")
            tableMapping.ColumnMappings.Add("FactorKM", "FactorKM")
            tableMapping.ColumnMappings.Add("KMS", "KMS")
            tableMapping.ColumnMappings.Add("FactorDia", "FactorDia")
            tableMapping.ColumnMappings.Add("dias", "dias")
            tableMapping.ColumnMappings.Add("DesctoRend", "DesctoRend")
            tableMapping.ColumnMappings.Add("DesctoReset", "DesctoReset")
            tableMapping.ColumnMappings.Add("UtilSinDcto", "UtilSinDcto")
            tableMapping.ColumnMappings.Add("UtilConDcto", "UtilConDcto")
            tableMapping.ColumnMappings.Add("flete", "flete")
            tableMapping.ColumnMappings.Add("Comision", "Comision")
            tableMapping.ColumnMappings.Add("Litros", "Litros")
            tableMapping.ColumnMappings.Add("CtoDiesel", "CtoDiesel")
            tableMapping.ColumnMappings.Add("CtoTotDiesel", "CtoTotDiesel")
            tableMapping.ColumnMappings.Add("PorcUtilSinDcto", "PorcUtilSinDcto")
            tableMapping.ColumnMappings.Add("PorcUtilConDcto", "PorcUtilConDcto")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Interflet.MySettings.Default.ProduccionInterfletdbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.UP_Consulta_DetalleUtilidadReal"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoViaje", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PI_DetalleUtilidad.UP_Consulta_DetalleUtilidadRealDataTable, ByVal NoViaje As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NoViaje.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NoViaje.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal NoViaje As Global.System.Nullable(Of Integer)) As PI_DetalleUtilidad.UP_Consulta_DetalleUtilidadRealDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NoViaje.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NoViaje.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As PI_DetalleUtilidad.UP_Consulta_DetalleUtilidadRealDataTable = New PI_DetalleUtilidad.UP_Consulta_DetalleUtilidadRealDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
