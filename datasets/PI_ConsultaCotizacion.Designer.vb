'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PI_ConsultaCotizacion"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PI_ConsultaCotizacion
    Inherits Global.System.Data.DataSet
    
    Private tableUP_Consulta_Cotizacion As UP_Consulta_CotizacionDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("UP_Consulta_Cotizacion")) Is Nothing) Then
                MyBase.Tables.Add(New UP_Consulta_CotizacionDataTable(ds.Tables("UP_Consulta_Cotizacion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property UP_Consulta_Cotizacion() As UP_Consulta_CotizacionDataTable
        Get
            Return Me.tableUP_Consulta_Cotizacion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PI_ConsultaCotizacion = CType(MyBase.Clone,PI_ConsultaCotizacion)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("UP_Consulta_Cotizacion")) Is Nothing) Then
                MyBase.Tables.Add(New UP_Consulta_CotizacionDataTable(ds.Tables("UP_Consulta_Cotizacion")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableUP_Consulta_Cotizacion = CType(MyBase.Tables("UP_Consulta_Cotizacion"),UP_Consulta_CotizacionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUP_Consulta_Cotizacion) Is Nothing) Then
                Me.tableUP_Consulta_Cotizacion.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "PI_ConsultaCotizacion"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PI_ConsultaCotizacion.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableUP_Consulta_Cotizacion = New UP_Consulta_CotizacionDataTable
        MyBase.Tables.Add(Me.tableUP_Consulta_Cotizacion)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeUP_Consulta_Cotizacion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PI_ConsultaCotizacion = New PI_ConsultaCotizacion
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub UP_Consulta_CotizacionRowChangeEventHandler(ByVal sender As Object, ByVal e As UP_Consulta_CotizacionRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UP_Consulta_CotizacionDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnId_Num_Cotizacion As Global.System.Data.DataColumn
        
        Private columnOrigen As Global.System.Data.DataColumn
        
        Private columnDestino As Global.System.Data.DataColumn
        
        Private columnCliente As Global.System.Data.DataColumn
        
        Private columnTipoViaje As Global.System.Data.DataColumn
        
        Private columnTipoRemolque As Global.System.Data.DataColumn
        
        Private columnPeso As Global.System.Data.DataColumn
        
        Private columnCant_KM As Global.System.Data.DataColumn
        
        Private columnMonto_Casetas As Global.System.Data.DataColumn
        
        Private columnCant_DiasViaje As Global.System.Data.DataColumn
        
        Private columnCosto_Diesel As Global.System.Data.DataColumn
        
        Private columnMonto_Maniobras As Global.System.Data.DataColumn
        
        Private columnComision As Global.System.Data.DataColumn
        
        Private columnSueldo As Global.System.Data.DataColumn
        
        Private columnSeguro As Global.System.Data.DataColumn
        
        Private columnVolumen As Global.System.Data.DataColumn
        
        Private columnFrecuencia As Global.System.Data.DataColumn
        
        Private columnSobrecosto As Global.System.Data.DataColumn
        
        Private columnIncremento As Global.System.Data.DataColumn
        
        Private columnTipoCotizacion As Global.System.Data.DataColumn
        
        Private columnPorcUtilMin As Global.System.Data.DataColumn
        
        Private columnPorcUtilMax As Global.System.Data.DataColumn
        
        Private columnMonto_UtilMin As Global.System.Data.DataColumn
        
        Private columnMonto_UtilMax As Global.System.Data.DataColumn
        
        Private columnPorcUtilSencillo As Global.System.Data.DataColumn
        
        Private columnMonto_TarifaSencillo As Global.System.Data.DataColumn
        
        Private columnPorcUtilFull As Global.System.Data.DataColumn
        
        Private columnMonto_TarifaFull As Global.System.Data.DataColumn
        
        Private columnObservaciones As Global.System.Data.DataColumn
        
        Private columnFechaCotizacion As Global.System.Data.DataColumn
        
        Private columnUsuario As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "UP_Consulta_Cotizacion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Id_Num_CotizacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Num_Cotizacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OrigenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrigen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DestinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoViajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoViaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoRemolqueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoRemolque
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PesoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cant_KMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCant_KM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Monto_CasetasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_Casetas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cant_DiasViajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCant_DiasViaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Costo_DieselColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCosto_Diesel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Monto_ManiobrasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_Maniobras
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ComisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SueldoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSueldo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SeguroColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSeguro
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VolumenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVolumen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FrecuenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrecuencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SobrecostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSobrecosto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IncrementoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncremento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoCotizacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCotizacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcUtilMinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcUtilMin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcUtilMaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcUtilMax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Monto_UtilMinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_UtilMin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Monto_UtilMaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_UtilMax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcUtilSencilloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcUtilSencillo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Monto_TarifaSencilloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_TarifaSencillo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PorcUtilFullColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPorcUtilFull
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Monto_TarifaFullColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMonto_TarifaFull
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaCotizacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCotizacion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UsuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsuario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UP_Consulta_CotizacionRow
            Get
                Return CType(Me.Rows(index),UP_Consulta_CotizacionRow)
            End Get
        End Property
        
        Public Event UP_Consulta_CotizacionRowChanging As UP_Consulta_CotizacionRowChangeEventHandler
        
        Public Event UP_Consulta_CotizacionRowChanged As UP_Consulta_CotizacionRowChangeEventHandler
        
        Public Event UP_Consulta_CotizacionRowDeleting As UP_Consulta_CotizacionRowChangeEventHandler
        
        Public Event UP_Consulta_CotizacionRowDeleted As UP_Consulta_CotizacionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddUP_Consulta_CotizacionRow(ByVal row As UP_Consulta_CotizacionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddUP_Consulta_CotizacionRow( _
                    ByVal Id_Num_Cotizacion As Integer,  _
                    ByVal Origen As String,  _
                    ByVal Destino As String,  _
                    ByVal Cliente As String,  _
                    ByVal TipoViaje As String,  _
                    ByVal TipoRemolque As String,  _
                    ByVal Peso As Decimal,  _
                    ByVal Cant_KM As Decimal,  _
                    ByVal Monto_Casetas As Decimal,  _
                    ByVal Cant_DiasViaje As Decimal,  _
                    ByVal Costo_Diesel As Decimal,  _
                    ByVal Monto_Maniobras As Decimal,  _
                    ByVal Comision As Decimal,  _
                    ByVal Sueldo As Decimal,  _
                    ByVal Seguro As String,  _
                    ByVal Volumen As Decimal,  _
                    ByVal Frecuencia As String,  _
                    ByVal Sobrecosto As Decimal,  _
                    ByVal Incremento As Integer,  _
                    ByVal TipoCotizacion As String,  _
                    ByVal PorcUtilMin As Decimal,  _
                    ByVal PorcUtilMax As Decimal,  _
                    ByVal Monto_UtilMin As Decimal,  _
                    ByVal Monto_UtilMax As Decimal,  _
                    ByVal PorcUtilSencillo As Decimal,  _
                    ByVal Monto_TarifaSencillo As Decimal,  _
                    ByVal PorcUtilFull As Decimal,  _
                    ByVal Monto_TarifaFull As Decimal,  _
                    ByVal Observaciones As String,  _
                    ByVal FechaCotizacion As Date,  _
                    ByVal Usuario As String) As UP_Consulta_CotizacionRow
            Dim rowUP_Consulta_CotizacionRow As UP_Consulta_CotizacionRow = CType(Me.NewRow,UP_Consulta_CotizacionRow)
            Dim columnValuesArray() As Object = New Object() {Id_Num_Cotizacion, Origen, Destino, Cliente, TipoViaje, TipoRemolque, Peso, Cant_KM, Monto_Casetas, Cant_DiasViaje, Costo_Diesel, Monto_Maniobras, Comision, Sueldo, Seguro, Volumen, Frecuencia, Sobrecosto, Incremento, TipoCotizacion, PorcUtilMin, PorcUtilMax, Monto_UtilMin, Monto_UtilMax, PorcUtilSencillo, Monto_TarifaSencillo, PorcUtilFull, Monto_TarifaFull, Observaciones, FechaCotizacion, Usuario}
            rowUP_Consulta_CotizacionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUP_Consulta_CotizacionRow)
            Return rowUP_Consulta_CotizacionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindById_Num_Cotizacion(ByVal Id_Num_Cotizacion As Integer) As UP_Consulta_CotizacionRow
            Return CType(Me.Rows.Find(New Object() {Id_Num_Cotizacion}),UP_Consulta_CotizacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UP_Consulta_CotizacionDataTable = CType(MyBase.Clone,UP_Consulta_CotizacionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UP_Consulta_CotizacionDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId_Num_Cotizacion = MyBase.Columns("Id_Num_Cotizacion")
            Me.columnOrigen = MyBase.Columns("Origen")
            Me.columnDestino = MyBase.Columns("Destino")
            Me.columnCliente = MyBase.Columns("Cliente")
            Me.columnTipoViaje = MyBase.Columns("TipoViaje")
            Me.columnTipoRemolque = MyBase.Columns("TipoRemolque")
            Me.columnPeso = MyBase.Columns("Peso")
            Me.columnCant_KM = MyBase.Columns("Cant_KM")
            Me.columnMonto_Casetas = MyBase.Columns("Monto_Casetas")
            Me.columnCant_DiasViaje = MyBase.Columns("Cant_DiasViaje")
            Me.columnCosto_Diesel = MyBase.Columns("Costo_Diesel")
            Me.columnMonto_Maniobras = MyBase.Columns("Monto_Maniobras")
            Me.columnComision = MyBase.Columns("Comision")
            Me.columnSueldo = MyBase.Columns("Sueldo")
            Me.columnSeguro = MyBase.Columns("Seguro")
            Me.columnVolumen = MyBase.Columns("Volumen")
            Me.columnFrecuencia = MyBase.Columns("Frecuencia")
            Me.columnSobrecosto = MyBase.Columns("Sobrecosto")
            Me.columnIncremento = MyBase.Columns("Incremento")
            Me.columnTipoCotizacion = MyBase.Columns("TipoCotizacion")
            Me.columnPorcUtilMin = MyBase.Columns("PorcUtilMin")
            Me.columnPorcUtilMax = MyBase.Columns("PorcUtilMax")
            Me.columnMonto_UtilMin = MyBase.Columns("Monto_UtilMin")
            Me.columnMonto_UtilMax = MyBase.Columns("Monto_UtilMax")
            Me.columnPorcUtilSencillo = MyBase.Columns("PorcUtilSencillo")
            Me.columnMonto_TarifaSencillo = MyBase.Columns("Monto_TarifaSencillo")
            Me.columnPorcUtilFull = MyBase.Columns("PorcUtilFull")
            Me.columnMonto_TarifaFull = MyBase.Columns("Monto_TarifaFull")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnFechaCotizacion = MyBase.Columns("FechaCotizacion")
            Me.columnUsuario = MyBase.Columns("Usuario")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId_Num_Cotizacion = New Global.System.Data.DataColumn("Id_Num_Cotizacion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Num_Cotizacion)
            Me.columnOrigen = New Global.System.Data.DataColumn("Origen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrigen)
            Me.columnDestino = New Global.System.Data.DataColumn("Destino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestino)
            Me.columnCliente = New Global.System.Data.DataColumn("Cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente)
            Me.columnTipoViaje = New Global.System.Data.DataColumn("TipoViaje", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoViaje)
            Me.columnTipoRemolque = New Global.System.Data.DataColumn("TipoRemolque", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoRemolque)
            Me.columnPeso = New Global.System.Data.DataColumn("Peso", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeso)
            Me.columnCant_KM = New Global.System.Data.DataColumn("Cant_KM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCant_KM)
            Me.columnMonto_Casetas = New Global.System.Data.DataColumn("Monto_Casetas", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_Casetas)
            Me.columnCant_DiasViaje = New Global.System.Data.DataColumn("Cant_DiasViaje", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCant_DiasViaje)
            Me.columnCosto_Diesel = New Global.System.Data.DataColumn("Costo_Diesel", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto_Diesel)
            Me.columnMonto_Maniobras = New Global.System.Data.DataColumn("Monto_Maniobras", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_Maniobras)
            Me.columnComision = New Global.System.Data.DataColumn("Comision", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComision)
            Me.columnSueldo = New Global.System.Data.DataColumn("Sueldo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSueldo)
            Me.columnSeguro = New Global.System.Data.DataColumn("Seguro", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSeguro)
            Me.columnVolumen = New Global.System.Data.DataColumn("Volumen", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVolumen)
            Me.columnFrecuencia = New Global.System.Data.DataColumn("Frecuencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrecuencia)
            Me.columnSobrecosto = New Global.System.Data.DataColumn("Sobrecosto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSobrecosto)
            Me.columnIncremento = New Global.System.Data.DataColumn("Incremento", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncremento)
            Me.columnTipoCotizacion = New Global.System.Data.DataColumn("TipoCotizacion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCotizacion)
            Me.columnPorcUtilMin = New Global.System.Data.DataColumn("PorcUtilMin", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcUtilMin)
            Me.columnPorcUtilMax = New Global.System.Data.DataColumn("PorcUtilMax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcUtilMax)
            Me.columnMonto_UtilMin = New Global.System.Data.DataColumn("Monto_UtilMin", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_UtilMin)
            Me.columnMonto_UtilMax = New Global.System.Data.DataColumn("Monto_UtilMax", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_UtilMax)
            Me.columnPorcUtilSencillo = New Global.System.Data.DataColumn("PorcUtilSencillo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcUtilSencillo)
            Me.columnMonto_TarifaSencillo = New Global.System.Data.DataColumn("Monto_TarifaSencillo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_TarifaSencillo)
            Me.columnPorcUtilFull = New Global.System.Data.DataColumn("PorcUtilFull", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPorcUtilFull)
            Me.columnMonto_TarifaFull = New Global.System.Data.DataColumn("Monto_TarifaFull", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMonto_TarifaFull)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnFechaCotizacion = New Global.System.Data.DataColumn("FechaCotizacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCotizacion)
            Me.columnUsuario = New Global.System.Data.DataColumn("Usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsuario)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId_Num_Cotizacion}, true))
            Me.columnId_Num_Cotizacion.AllowDBNull = false
            Me.columnId_Num_Cotizacion.Unique = true
            Me.columnOrigen.ReadOnly = true
            Me.columnOrigen.MaxLength = 30
            Me.columnDestino.ReadOnly = true
            Me.columnDestino.MaxLength = 50
            Me.columnCliente.MaxLength = 250
            Me.columnTipoViaje.ReadOnly = true
            Me.columnTipoViaje.MaxLength = 8
            Me.columnTipoRemolque.ReadOnly = true
            Me.columnTipoRemolque.MaxLength = 33
            Me.columnComision.ReadOnly = true
            Me.columnSueldo.ReadOnly = true
            Me.columnSeguro.ReadOnly = true
            Me.columnSeguro.MaxLength = 2
            Me.columnFrecuencia.ReadOnly = true
            Me.columnFrecuencia.MaxLength = 100
            Me.columnSobrecosto.ReadOnly = true
            Me.columnTipoCotizacion.ReadOnly = true
            Me.columnTipoCotizacion.MaxLength = 13
            Me.columnPorcUtilMin.ReadOnly = true
            Me.columnPorcUtilMax.ReadOnly = true
            Me.columnPorcUtilSencillo.ReadOnly = true
            Me.columnPorcUtilFull.ReadOnly = true
            Me.columnObservaciones.MaxLength = 2147483647
            Me.columnUsuario.ReadOnly = true
            Me.columnUsuario.MaxLength = 122
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewUP_Consulta_CotizacionRow() As UP_Consulta_CotizacionRow
            Return CType(Me.NewRow,UP_Consulta_CotizacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UP_Consulta_CotizacionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UP_Consulta_CotizacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UP_Consulta_CotizacionRowChangedEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_CotizacionRowChanged(Me, New UP_Consulta_CotizacionRowChangeEvent(CType(e.Row,UP_Consulta_CotizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UP_Consulta_CotizacionRowChangingEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_CotizacionRowChanging(Me, New UP_Consulta_CotizacionRowChangeEvent(CType(e.Row,UP_Consulta_CotizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UP_Consulta_CotizacionRowDeletedEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_CotizacionRowDeleted(Me, New UP_Consulta_CotizacionRowChangeEvent(CType(e.Row,UP_Consulta_CotizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UP_Consulta_CotizacionRowDeletingEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_CotizacionRowDeleting(Me, New UP_Consulta_CotizacionRowChangeEvent(CType(e.Row,UP_Consulta_CotizacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveUP_Consulta_CotizacionRow(ByVal row As UP_Consulta_CotizacionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As PI_ConsultaCotizacion = New PI_ConsultaCotizacion
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UP_Consulta_CotizacionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class UP_Consulta_CotizacionRow
        Inherits Global.System.Data.DataRow
        
        Private tableUP_Consulta_Cotizacion As UP_Consulta_CotizacionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUP_Consulta_Cotizacion = CType(Me.Table,UP_Consulta_CotizacionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id_Num_Cotizacion() As Integer
            Get
                Return CType(Me(Me.tableUP_Consulta_Cotizacion.Id_Num_CotizacionColumn),Integer)
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Id_Num_CotizacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Origen() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.OrigenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Origen' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.OrigenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Destino() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.DestinoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Destino' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.DestinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.ClienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cliente' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.ClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoViaje() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.TipoViajeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoViaje' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.TipoViajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoRemolque() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.TipoRemolqueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoRemolque' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.TipoRemolqueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Peso() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.PesoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Peso' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.PesoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cant_KM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Cant_KMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cant_KM' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Cant_KMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Monto_Casetas() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Monto_CasetasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto_Casetas' in table 'UP_Consulta_Cotizacion' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Monto_CasetasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cant_DiasViaje() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Cant_DiasViajeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cant_DiasViaje' in table 'UP_Consulta_Cotizacion' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Cant_DiasViajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Costo_Diesel() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Costo_DieselColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Costo_Diesel' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Costo_DieselColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Monto_Maniobras() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Monto_ManiobrasColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto_Maniobras' in table 'UP_Consulta_Cotizacion' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Monto_ManiobrasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Comision() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.ComisionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comision' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.ComisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sueldo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.SueldoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sueldo' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.SueldoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Seguro() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.SeguroColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Seguro' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.SeguroColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Volumen() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.VolumenColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Volumen' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.VolumenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Frecuencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.FrecuenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Frecuencia' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.FrecuenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sobrecosto() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.SobrecostoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sobrecosto' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.SobrecostoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Incremento() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.IncrementoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incremento' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.IncrementoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoCotizacion() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.TipoCotizacionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TipoCotizacion' in table 'UP_Consulta_Cotizacion' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.TipoCotizacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcUtilMin() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.PorcUtilMinColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcUtilMin' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.PorcUtilMinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcUtilMax() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.PorcUtilMaxColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcUtilMax' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.PorcUtilMaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Monto_UtilMin() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Monto_UtilMinColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto_UtilMin' in table 'UP_Consulta_Cotizacion' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Monto_UtilMinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Monto_UtilMax() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Monto_UtilMaxColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto_UtilMax' in table 'UP_Consulta_Cotizacion' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Monto_UtilMaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcUtilSencillo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.PorcUtilSencilloColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcUtilSencillo' in table 'UP_Consulta_Cotizacion' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.PorcUtilSencilloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Monto_TarifaSencillo() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Monto_TarifaSencilloColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto_TarifaSencillo' in table 'UP_Consulta_Cotizacion' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Monto_TarifaSencilloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PorcUtilFull() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.PorcUtilFullColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PorcUtilFull' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.PorcUtilFullColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Monto_TarifaFull() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.Monto_TarifaFullColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Monto_TarifaFull' in table 'UP_Consulta_Cotizacion' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.Monto_TarifaFullColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.ObservacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Observaciones' in table 'UP_Consulta_Cotizacion' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.ObservacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FechaCotizacion() As Date
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.FechaCotizacionColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FechaCotizacion' in table 'UP_Consulta_Cotizacion' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.FechaCotizacionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Usuario() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_Cotizacion.UsuarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Usuario' in table 'UP_Consulta_Cotizacion' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_Cotizacion.UsuarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOrigenNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.OrigenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOrigenNull()
            Me(Me.tableUP_Consulta_Cotizacion.OrigenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDestinoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.DestinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDestinoNull()
            Me(Me.tableUP_Consulta_Cotizacion.DestinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsClienteNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.ClienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetClienteNull()
            Me(Me.tableUP_Consulta_Cotizacion.ClienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoViajeNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.TipoViajeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoViajeNull()
            Me(Me.tableUP_Consulta_Cotizacion.TipoViajeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoRemolqueNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.TipoRemolqueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoRemolqueNull()
            Me(Me.tableUP_Consulta_Cotizacion.TipoRemolqueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPesoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.PesoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPesoNull()
            Me(Me.tableUP_Consulta_Cotizacion.PesoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCant_KMNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Cant_KMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCant_KMNull()
            Me(Me.tableUP_Consulta_Cotizacion.Cant_KMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonto_CasetasNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Monto_CasetasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonto_CasetasNull()
            Me(Me.tableUP_Consulta_Cotizacion.Monto_CasetasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCant_DiasViajeNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Cant_DiasViajeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCant_DiasViajeNull()
            Me(Me.tableUP_Consulta_Cotizacion.Cant_DiasViajeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCosto_DieselNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Costo_DieselColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCosto_DieselNull()
            Me(Me.tableUP_Consulta_Cotizacion.Costo_DieselColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonto_ManiobrasNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Monto_ManiobrasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonto_ManiobrasNull()
            Me(Me.tableUP_Consulta_Cotizacion.Monto_ManiobrasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsComisionNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.ComisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetComisionNull()
            Me(Me.tableUP_Consulta_Cotizacion.ComisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSueldoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.SueldoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSueldoNull()
            Me(Me.tableUP_Consulta_Cotizacion.SueldoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSeguroNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.SeguroColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSeguroNull()
            Me(Me.tableUP_Consulta_Cotizacion.SeguroColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVolumenNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.VolumenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVolumenNull()
            Me(Me.tableUP_Consulta_Cotizacion.VolumenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrecuenciaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.FrecuenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrecuenciaNull()
            Me(Me.tableUP_Consulta_Cotizacion.FrecuenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSobrecostoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.SobrecostoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSobrecostoNull()
            Me(Me.tableUP_Consulta_Cotizacion.SobrecostoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIncrementoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.IncrementoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIncrementoNull()
            Me(Me.tableUP_Consulta_Cotizacion.IncrementoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipoCotizacionNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.TipoCotizacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipoCotizacionNull()
            Me(Me.tableUP_Consulta_Cotizacion.TipoCotizacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcUtilMinNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.PorcUtilMinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcUtilMinNull()
            Me(Me.tableUP_Consulta_Cotizacion.PorcUtilMinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcUtilMaxNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.PorcUtilMaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcUtilMaxNull()
            Me(Me.tableUP_Consulta_Cotizacion.PorcUtilMaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonto_UtilMinNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Monto_UtilMinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonto_UtilMinNull()
            Me(Me.tableUP_Consulta_Cotizacion.Monto_UtilMinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonto_UtilMaxNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Monto_UtilMaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonto_UtilMaxNull()
            Me(Me.tableUP_Consulta_Cotizacion.Monto_UtilMaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcUtilSencilloNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.PorcUtilSencilloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcUtilSencilloNull()
            Me(Me.tableUP_Consulta_Cotizacion.PorcUtilSencilloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonto_TarifaSencilloNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Monto_TarifaSencilloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonto_TarifaSencilloNull()
            Me(Me.tableUP_Consulta_Cotizacion.Monto_TarifaSencilloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPorcUtilFullNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.PorcUtilFullColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPorcUtilFullNull()
            Me(Me.tableUP_Consulta_Cotizacion.PorcUtilFullColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMonto_TarifaFullNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.Monto_TarifaFullColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMonto_TarifaFullNull()
            Me(Me.tableUP_Consulta_Cotizacion.Monto_TarifaFullColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.ObservacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetObservacionesNull()
            Me(Me.tableUP_Consulta_Cotizacion.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaCotizacionNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.FechaCotizacionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaCotizacionNull()
            Me(Me.tableUP_Consulta_Cotizacion.FechaCotizacionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUsuarioNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_Cotizacion.UsuarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUsuarioNull()
            Me(Me.tableUP_Consulta_Cotizacion.UsuarioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class UP_Consulta_CotizacionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UP_Consulta_CotizacionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As UP_Consulta_CotizacionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As UP_Consulta_CotizacionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PI_ConsultaCotizacionTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UP_Consulta_CotizacionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "UP_Consulta_Cotizacion"
            tableMapping.ColumnMappings.Add("Id_Num_Cotizacion", "Id_Num_Cotizacion")
            tableMapping.ColumnMappings.Add("Origen", "Origen")
            tableMapping.ColumnMappings.Add("Destino", "Destino")
            tableMapping.ColumnMappings.Add("Cliente", "Cliente")
            tableMapping.ColumnMappings.Add("TipoViaje", "TipoViaje")
            tableMapping.ColumnMappings.Add("TipoRemolque", "TipoRemolque")
            tableMapping.ColumnMappings.Add("Peso", "Peso")
            tableMapping.ColumnMappings.Add("Cant_KM", "Cant_KM")
            tableMapping.ColumnMappings.Add("Monto_Casetas", "Monto_Casetas")
            tableMapping.ColumnMappings.Add("Cant_DiasViaje", "Cant_DiasViaje")
            tableMapping.ColumnMappings.Add("Costo_Diesel", "Costo_Diesel")
            tableMapping.ColumnMappings.Add("Monto_Maniobras", "Monto_Maniobras")
            tableMapping.ColumnMappings.Add("Comision", "Comision")
            tableMapping.ColumnMappings.Add("Sueldo", "Sueldo")
            tableMapping.ColumnMappings.Add("Seguro", "Seguro")
            tableMapping.ColumnMappings.Add("Volumen", "Volumen")
            tableMapping.ColumnMappings.Add("Frecuencia", "Frecuencia")
            tableMapping.ColumnMappings.Add("Sobrecosto", "Sobrecosto")
            tableMapping.ColumnMappings.Add("Incremento", "Incremento")
            tableMapping.ColumnMappings.Add("TipoCotizacion", "TipoCotizacion")
            tableMapping.ColumnMappings.Add("PorcUtilMin", "PorcUtilMin")
            tableMapping.ColumnMappings.Add("PorcUtilMax", "PorcUtilMax")
            tableMapping.ColumnMappings.Add("Monto_UtilMin", "Monto_UtilMin")
            tableMapping.ColumnMappings.Add("Monto_UtilMax", "Monto_UtilMax")
            tableMapping.ColumnMappings.Add("PorcUtilSencillo", "PorcUtilSencillo")
            tableMapping.ColumnMappings.Add("Monto_UtilSencillo", "Monto_TarifaSencillo")
            tableMapping.ColumnMappings.Add("PorcUtilFull", "PorcUtilFull")
            tableMapping.ColumnMappings.Add("Monto_UtilFull", "Monto_TarifaFull")
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones")
            tableMapping.ColumnMappings.Add("FechaCotizacion", "FechaCotizacion")
            tableMapping.ColumnMappings.Add("Usuario", "Usuario")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Interflet.MySettings.Default.ProduccionInterfletdbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.UP_Consulta_Cotizacion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoCotizacion", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cliente", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FecIni", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FecFin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PI_ConsultaCotizacion.UP_Consulta_CotizacionDataTable, ByVal NoCotizacion As Global.System.Nullable(Of Integer), ByVal Cliente As String, ByVal FecIni As Global.System.Nullable(Of Date), ByVal FecFin As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NoCotizacion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NoCotizacion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Cliente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Cliente,String)
            End If
            If (FecIni.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FecIni.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FecFin.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FecFin.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal NoCotizacion As Global.System.Nullable(Of Integer), ByVal Cliente As String, ByVal FecIni As Global.System.Nullable(Of Date), ByVal FecFin As Global.System.Nullable(Of Date)) As PI_ConsultaCotizacion.UP_Consulta_CotizacionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NoCotizacion.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NoCotizacion.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Cliente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Cliente,String)
            End If
            If (FecIni.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FecIni.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FecFin.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FecFin.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As PI_ConsultaCotizacion.UP_Consulta_CotizacionDataTable = New PI_ConsultaCotizacion.UP_Consulta_CotizacionDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
