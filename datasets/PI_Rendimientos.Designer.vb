'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PI_Rendimientos"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PI_Rendimientos
    Inherits Global.System.Data.DataSet
    
    Private tableCat_RendimientosEst As Cat_RendimientosEstDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Cat_RendimientosEst")) Is Nothing) Then
                MyBase.Tables.Add(New Cat_RendimientosEstDataTable(ds.Tables("Cat_RendimientosEst")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Cat_RendimientosEst() As Cat_RendimientosEstDataTable
        Get
            Return Me.tableCat_RendimientosEst
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PI_Rendimientos = CType(MyBase.Clone,PI_Rendimientos)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("Cat_RendimientosEst")) Is Nothing) Then
                MyBase.Tables.Add(New Cat_RendimientosEstDataTable(ds.Tables("Cat_RendimientosEst")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCat_RendimientosEst = CType(MyBase.Tables("Cat_RendimientosEst"),Cat_RendimientosEstDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCat_RendimientosEst) Is Nothing) Then
                Me.tableCat_RendimientosEst.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "PI_Rendimientos"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PI_Rendimientos.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCat_RendimientosEst = New Cat_RendimientosEstDataTable
        MyBase.Tables.Add(Me.tableCat_RendimientosEst)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeCat_RendimientosEst() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PI_Rendimientos = New PI_Rendimientos
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub Cat_RendimientosEstRowChangeEventHandler(ByVal sender As Object, ByVal e As Cat_RendimientosEstRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Cat_RendimientosEstDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnId_Num_Origen As Global.System.Data.DataColumn
        
        Private columnId_Num_Destino As Global.System.Data.DataColumn
        
        Private columnId_Cliente As Global.System.Data.DataColumn
        
        Private columnTipoViaje As Global.System.Data.DataColumn
        
        Private columnRangoPesoIni As Global.System.Data.DataColumn
        
        Private columnRangoPesoFin As Global.System.Data.DataColumn
        
        Private columnKmPromedio As Global.System.Data.DataColumn
        
        Private columnLtsPromedio As Global.System.Data.DataColumn
        
        Private columnRendPromedio As Global.System.Data.DataColumn
        
        Private columnCantViajes As Global.System.Data.DataColumn
        
        Private columnFec_Movto As Global.System.Data.DataColumn
        
        Private columnUserId As Global.System.Data.DataColumn
        
        Private columnId_Tipo_Motor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Cat_RendimientosEst"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Id_Num_OrigenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Num_Origen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Id_Num_DestinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Num_Destino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Id_ClienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoViajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoViaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RangoPesoIniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRangoPesoIni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RangoPesoFinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRangoPesoFin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KmPromedioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKmPromedio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LtsPromedioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLtsPromedio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RendPromedioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRendPromedio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CantViajesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantViajes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Fec_MovtoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFec_Movto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property UserIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Id_Tipo_MotorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId_Tipo_Motor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Cat_RendimientosEstRow
            Get
                Return CType(Me.Rows(index),Cat_RendimientosEstRow)
            End Get
        End Property
        
        Public Event Cat_RendimientosEstRowChanging As Cat_RendimientosEstRowChangeEventHandler
        
        Public Event Cat_RendimientosEstRowChanged As Cat_RendimientosEstRowChangeEventHandler
        
        Public Event Cat_RendimientosEstRowDeleting As Cat_RendimientosEstRowChangeEventHandler
        
        Public Event Cat_RendimientosEstRowDeleted As Cat_RendimientosEstRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddCat_RendimientosEstRow(ByVal row As Cat_RendimientosEstRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddCat_RendimientosEstRow(ByVal Id_Num_Origen As Integer, ByVal Id_Num_Destino As Integer, ByVal Id_Cliente As Integer, ByVal TipoViaje As Integer, ByVal RangoPesoIni As Integer, ByVal RangoPesoFin As Integer, ByVal KmPromedio As Decimal, ByVal LtsPromedio As Decimal, ByVal RendPromedio As Decimal, ByVal CantViajes As Integer, ByVal Fec_Movto As Date, ByVal UserId As Integer, ByVal Id_Tipo_Motor As Integer) As Cat_RendimientosEstRow
            Dim rowCat_RendimientosEstRow As Cat_RendimientosEstRow = CType(Me.NewRow,Cat_RendimientosEstRow)
            Dim columnValuesArray() As Object = New Object() {Id_Num_Origen, Id_Num_Destino, Id_Cliente, TipoViaje, RangoPesoIni, RangoPesoFin, KmPromedio, LtsPromedio, RendPromedio, CantViajes, Fec_Movto, UserId, Id_Tipo_Motor}
            rowCat_RendimientosEstRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCat_RendimientosEstRow)
            Return rowCat_RendimientosEstRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindById_Num_OrigenId_Num_DestinoId_ClienteTipoViajeRangoPesoIni(ByVal Id_Num_Origen As Integer, ByVal Id_Num_Destino As Integer, ByVal Id_Cliente As Integer, ByVal TipoViaje As Integer, ByVal RangoPesoIni As Integer) As Cat_RendimientosEstRow
            Return CType(Me.Rows.Find(New Object() {Id_Num_Origen, Id_Num_Destino, Id_Cliente, TipoViaje, RangoPesoIni}),Cat_RendimientosEstRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Cat_RendimientosEstDataTable = CType(MyBase.Clone,Cat_RendimientosEstDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Cat_RendimientosEstDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId_Num_Origen = MyBase.Columns("Id_Num_Origen")
            Me.columnId_Num_Destino = MyBase.Columns("Id_Num_Destino")
            Me.columnId_Cliente = MyBase.Columns("Id_Cliente")
            Me.columnTipoViaje = MyBase.Columns("TipoViaje")
            Me.columnRangoPesoIni = MyBase.Columns("RangoPesoIni")
            Me.columnRangoPesoFin = MyBase.Columns("RangoPesoFin")
            Me.columnKmPromedio = MyBase.Columns("KmPromedio")
            Me.columnLtsPromedio = MyBase.Columns("LtsPromedio")
            Me.columnRendPromedio = MyBase.Columns("RendPromedio")
            Me.columnCantViajes = MyBase.Columns("CantViajes")
            Me.columnFec_Movto = MyBase.Columns("Fec_Movto")
            Me.columnUserId = MyBase.Columns("UserId")
            Me.columnId_Tipo_Motor = MyBase.Columns("Id_Tipo_Motor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId_Num_Origen = New Global.System.Data.DataColumn("Id_Num_Origen", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Num_Origen)
            Me.columnId_Num_Destino = New Global.System.Data.DataColumn("Id_Num_Destino", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Num_Destino)
            Me.columnId_Cliente = New Global.System.Data.DataColumn("Id_Cliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Cliente)
            Me.columnTipoViaje = New Global.System.Data.DataColumn("TipoViaje", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoViaje)
            Me.columnRangoPesoIni = New Global.System.Data.DataColumn("RangoPesoIni", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRangoPesoIni)
            Me.columnRangoPesoFin = New Global.System.Data.DataColumn("RangoPesoFin", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRangoPesoFin)
            Me.columnKmPromedio = New Global.System.Data.DataColumn("KmPromedio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKmPromedio)
            Me.columnLtsPromedio = New Global.System.Data.DataColumn("LtsPromedio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLtsPromedio)
            Me.columnRendPromedio = New Global.System.Data.DataColumn("RendPromedio", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRendPromedio)
            Me.columnCantViajes = New Global.System.Data.DataColumn("CantViajes", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantViajes)
            Me.columnFec_Movto = New Global.System.Data.DataColumn("Fec_Movto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFec_Movto)
            Me.columnUserId = New Global.System.Data.DataColumn("UserId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserId)
            Me.columnId_Tipo_Motor = New Global.System.Data.DataColumn("Id_Tipo_Motor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId_Tipo_Motor)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId_Num_Origen, Me.columnId_Num_Destino, Me.columnId_Cliente, Me.columnTipoViaje, Me.columnRangoPesoIni}, true))
            Me.columnId_Num_Origen.AllowDBNull = false
            Me.columnId_Num_Destino.AllowDBNull = false
            Me.columnId_Cliente.AllowDBNull = false
            Me.columnTipoViaje.AllowDBNull = false
            Me.columnRangoPesoIni.AllowDBNull = false
            Me.columnId_Tipo_Motor.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewCat_RendimientosEstRow() As Cat_RendimientosEstRow
            Return CType(Me.NewRow,Cat_RendimientosEstRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Cat_RendimientosEstRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Cat_RendimientosEstRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Cat_RendimientosEstRowChangedEvent) Is Nothing) Then
                RaiseEvent Cat_RendimientosEstRowChanged(Me, New Cat_RendimientosEstRowChangeEvent(CType(e.Row,Cat_RendimientosEstRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Cat_RendimientosEstRowChangingEvent) Is Nothing) Then
                RaiseEvent Cat_RendimientosEstRowChanging(Me, New Cat_RendimientosEstRowChangeEvent(CType(e.Row,Cat_RendimientosEstRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Cat_RendimientosEstRowDeletedEvent) Is Nothing) Then
                RaiseEvent Cat_RendimientosEstRowDeleted(Me, New Cat_RendimientosEstRowChangeEvent(CType(e.Row,Cat_RendimientosEstRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Cat_RendimientosEstRowDeletingEvent) Is Nothing) Then
                RaiseEvent Cat_RendimientosEstRowDeleting(Me, New Cat_RendimientosEstRowChangeEvent(CType(e.Row,Cat_RendimientosEstRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveCat_RendimientosEstRow(ByVal row As Cat_RendimientosEstRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As PI_Rendimientos = New PI_Rendimientos
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Cat_RendimientosEstDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Cat_RendimientosEstRow
        Inherits Global.System.Data.DataRow
        
        Private tableCat_RendimientosEst As Cat_RendimientosEstDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCat_RendimientosEst = CType(Me.Table,Cat_RendimientosEstDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id_Num_Origen() As Integer
            Get
                Return CType(Me(Me.tableCat_RendimientosEst.Id_Num_OrigenColumn),Integer)
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.Id_Num_OrigenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id_Num_Destino() As Integer
            Get
                Return CType(Me(Me.tableCat_RendimientosEst.Id_Num_DestinoColumn),Integer)
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.Id_Num_DestinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id_Cliente() As Integer
            Get
                Return CType(Me(Me.tableCat_RendimientosEst.Id_ClienteColumn),Integer)
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.Id_ClienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoViaje() As Integer
            Get
                Return CType(Me(Me.tableCat_RendimientosEst.TipoViajeColumn),Integer)
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.TipoViajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RangoPesoIni() As Integer
            Get
                Return CType(Me(Me.tableCat_RendimientosEst.RangoPesoIniColumn),Integer)
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.RangoPesoIniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RangoPesoFin() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.RangoPesoFinColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RangoPesoFin' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.RangoPesoFinColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KmPromedio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.KmPromedioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KmPromedio' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.KmPromedioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LtsPromedio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.LtsPromedioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LtsPromedio' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.LtsPromedioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RendPromedio() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.RendPromedioColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RendPromedio' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.RendPromedioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CantViajes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.CantViajesColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CantViajes' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.CantViajesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fec_Movto() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.Fec_MovtoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fec_Movto' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.Fec_MovtoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UserId() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCat_RendimientosEst.UserIdColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserId' in table 'Cat_RendimientosEst' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.UserIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id_Tipo_Motor() As Integer
            Get
                Return CType(Me(Me.tableCat_RendimientosEst.Id_Tipo_MotorColumn),Integer)
            End Get
            Set
                Me(Me.tableCat_RendimientosEst.Id_Tipo_MotorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRangoPesoFinNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.RangoPesoFinColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRangoPesoFinNull()
            Me(Me.tableCat_RendimientosEst.RangoPesoFinColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKmPromedioNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.KmPromedioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKmPromedioNull()
            Me(Me.tableCat_RendimientosEst.KmPromedioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLtsPromedioNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.LtsPromedioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLtsPromedioNull()
            Me(Me.tableCat_RendimientosEst.LtsPromedioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRendPromedioNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.RendPromedioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRendPromedioNull()
            Me(Me.tableCat_RendimientosEst.RendPromedioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCantViajesNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.CantViajesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCantViajesNull()
            Me(Me.tableCat_RendimientosEst.CantViajesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFec_MovtoNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.Fec_MovtoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFec_MovtoNull()
            Me(Me.tableCat_RendimientosEst.Fec_MovtoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsUserIdNull() As Boolean
            Return Me.IsNull(Me.tableCat_RendimientosEst.UserIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetUserIdNull()
            Me(Me.tableCat_RendimientosEst.UserIdColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Cat_RendimientosEstRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Cat_RendimientosEstRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Cat_RendimientosEstRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Cat_RendimientosEstRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PI_RendimientosTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Cat_RendimientosEstTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Cat_RendimientosEst"
            tableMapping.ColumnMappings.Add("Id_Num_Origen", "Id_Num_Origen")
            tableMapping.ColumnMappings.Add("Id_Num_Destino", "Id_Num_Destino")
            tableMapping.ColumnMappings.Add("Id_Cliente", "Id_Cliente")
            tableMapping.ColumnMappings.Add("TipoViaje", "TipoViaje")
            tableMapping.ColumnMappings.Add("RangoPesoIni", "RangoPesoIni")
            tableMapping.ColumnMappings.Add("RangoPesoFin", "RangoPesoFin")
            tableMapping.ColumnMappings.Add("KmPromedio", "KmPromedio")
            tableMapping.ColumnMappings.Add("LtsPromedio", "LtsPromedio")
            tableMapping.ColumnMappings.Add("RendPromedio", "RendPromedio")
            tableMapping.ColumnMappings.Add("CantViajes", "CantViajes")
            tableMapping.ColumnMappings.Add("Fec_Movto", "Fec_Movto")
            tableMapping.ColumnMappings.Add("UserId", "UserId")
            tableMapping.ColumnMappings.Add("Id_Tipo_Motor", "Id_Tipo_Motor")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM Cat_RendimientosEst"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Id_Num_Origen = @Original_Id_Num_Orig"& _ 
                "en) AND (Id_Num_Destino = @Original_Id_Num_Destino) AND (Id_Cliente = @Original_"& _ 
                "Id_Cliente) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (Id_Tipo_Motor = @Original_Id_Tipo_Motor"& _ 
                ") AND (TipoViaje = @Original_TipoViaje) AND (RangoPesoIni = @Original_RangoPesoI"& _ 
                "ni) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (RangoPesoFin IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "RangoPesoFin = @Original_RangoPesoFin) AND (KmPromedio IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         KmPromedio = @Original_KmPromedio) AND (LtsPromedio IS NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "               LtsPromedio = @Original_LtsPromedio) AND (RendPromedio IS NULL OR"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      RendPromedio = @Original_RendPromedio) AND (CantViajes I"& _ 
                "S NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CantViajes = @Original_CantViajes)"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Num_Origen", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Origen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Num_Destino", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Destino", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Cliente", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Tipo_Motor", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Tipo_Motor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TipoViaje", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoViaje", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RangoPesoIni", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoIni", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RangoPesoFin", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoFin", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KmPromedio", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 12, 2, "KmPromedio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LtsPromedio", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 12, 2, "LtsPromedio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RendPromedio", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 12, 2, "RendPromedio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CantViajes", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CantViajes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Cat_RendimientosEst] ([Id_Num_Origen], [Id_Num_Destino], [Id_Cliente"& _ 
                "], [Id_Tipo_Motor], [TipoViaje], [RangoPesoIni], [RangoPesoFin], [KmPromedio], ["& _ 
                "LtsPromedio], [RendPromedio], [CantViajes], [Fec_Movto], [UserId]) VALUES (@Id_N"& _ 
                "um_Origen, @Id_Num_Destino, @Id_Cliente, @Id_Tipo_Motor, @TipoViaje, @RangoPesoI"& _ 
                "ni, @RangoPesoFin, @KmPromedio, @LtsPromedio, @RendPromedio, @CantViajes, @Fec_M"& _ 
                "ovto, @UserId);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id_Num_Origen, Id_Num_Destino, Id_Cliente, Id_Tipo_Motor"& _ 
                ", TipoViaje, RangoPesoIni, RangoPesoFin, KmPromedio, LtsPromedio, RendPromedio, "& _ 
                "CantViajes, Fec_Movto, UserId FROM Cat_RendimientosEst WHERE (Id_Cliente = @Id_C"& _ 
                "liente) AND (Id_Num_Destino = @Id_Num_Destino) AND (Id_Num_Origen = @Id_Num_Orig"& _ 
                "en) AND (Id_Tipo_Motor = @Id_Tipo_Motor) AND (RangoPesoIni = @RangoPesoIni) AND "& _ 
                "(TipoViaje = @TipoViaje)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Num_Origen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Origen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Num_Destino", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Destino", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Tipo_Motor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Tipo_Motor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoViaje", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoViaje", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoPesoIni", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoIni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoPesoFin", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoFin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KmPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "KmPromedio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LtsPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "LtsPromedio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RendPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "RendPromedio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CantViajes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CantViajes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fec_Movto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fec_Movto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [Cat_RendimientosEst] SET [Id_Num_Origen] = @Id_Num_Origen, [Id_Num_Destin"& _ 
                "o] = @Id_Num_Destino, [Id_Cliente] = @Id_Cliente, [Id_Tipo_Motor] = @Id_Tipo_Mot"& _ 
                "or, [TipoViaje] = @TipoViaje, [RangoPesoIni] = @RangoPesoIni, [RangoPesoFin] = @"& _ 
                "RangoPesoFin, [KmPromedio] = @KmPromedio, [LtsPromedio] = @LtsPromedio, [RendPro"& _ 
                "medio] = @RendPromedio, [CantViajes] = @CantViajes, [Fec_Movto] = @Fec_Movto, [U"& _ 
                "serId] = @UserId WHERE (([Id_Num_Origen] = @Original_Id_Num_Origen) AND ([Id_Num"& _ 
                "_Destino] = @Original_Id_Num_Destino) AND ([Id_Cliente] = @Original_Id_Cliente) "& _ 
                "AND ([Id_Tipo_Motor] = @Original_Id_Tipo_Motor) AND ([TipoViaje] = @Original_Tip"& _ 
                "oViaje) AND ([RangoPesoIni] = @Original_RangoPesoIni) AND ((@IsNull_RangoPesoFin"& _ 
                " = 1 AND [RangoPesoFin] IS NULL) OR ([RangoPesoFin] = @Original_RangoPesoFin)) A"& _ 
                "ND ((@IsNull_KmPromedio = 1 AND [KmPromedio] IS NULL) OR ([KmPromedio] = @Origin"& _ 
                "al_KmPromedio)) AND ((@IsNull_LtsPromedio = 1 AND [LtsPromedio] IS NULL) OR ([Lt"& _ 
                "sPromedio] = @Original_LtsPromedio)) AND ((@IsNull_RendPromedio = 1 AND [RendPro"& _ 
                "medio] IS NULL) OR ([RendPromedio] = @Original_RendPromedio)) AND ((@IsNull_Cant"& _ 
                "Viajes = 1 AND [CantViajes] IS NULL) OR ([CantViajes] = @Original_CantViajes)) A"& _ 
                "ND ((@IsNull_Fec_Movto = 1 AND [Fec_Movto] IS NULL) OR ([Fec_Movto] = @Original_"& _ 
                "Fec_Movto)) AND ((@IsNull_UserId = 1 AND [UserId] IS NULL) OR ([UserId] = @Origi"& _ 
                "nal_UserId)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Id_Num_Origen, Id_Num_Destino, Id_Cliente, Id_Tipo_Motor,"& _ 
                " TipoViaje, RangoPesoIni, RangoPesoFin, KmPromedio, LtsPromedio, RendPromedio, C"& _ 
                "antViajes, Fec_Movto, UserId FROM Cat_RendimientosEst WHERE (Id_Cliente = @Id_Cl"& _ 
                "iente) AND (Id_Num_Destino = @Id_Num_Destino) AND (Id_Num_Origen = @Id_Num_Orige"& _ 
                "n) AND (Id_Tipo_Motor = @Id_Tipo_Motor) AND (RangoPesoIni = @RangoPesoIni) AND ("& _ 
                "TipoViaje = @TipoViaje)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Num_Origen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Origen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Num_Destino", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Destino", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Tipo_Motor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Tipo_Motor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoViaje", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoViaje", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoPesoIni", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoIni", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RangoPesoFin", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoFin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@KmPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "KmPromedio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LtsPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "LtsPromedio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RendPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "RendPromedio", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CantViajes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CantViajes", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fec_Movto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fec_Movto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UserId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Num_Origen", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Origen", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Num_Destino", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Destino", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Cliente", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id_Tipo_Motor", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Tipo_Motor", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TipoViaje", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoViaje", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RangoPesoIni", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoIni", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RangoPesoFin", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoFin", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RangoPesoFin", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RangoPesoFin", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_KmPromedio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "KmPromedio", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_KmPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "KmPromedio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LtsPromedio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LtsPromedio", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LtsPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "LtsPromedio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RendPromedio", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RendPromedio", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RendPromedio", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 12, 2, "RendPromedio", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CantViajes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CantViajes", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CantViajes", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CantViajes", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Fec_Movto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fec_Movto", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Fec_Movto", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Fec_Movto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_UserId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_UserId", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UserId", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Interflet.MySettings.Default.ProduccionInterfletdbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Id_Num_Origen, Id_Num_Destino, Id_Cliente, Id_Tipo_Motor, TipoViaje, R"& _ 
                "angoPesoIni, RangoPesoFin, KmPromedio, LtsPromedio, RendPromedio, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "          CantViajes, Fec_Movto, UserId"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Cat_RendimientosEst"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     R.Id_Num_Origen, R.Id_Num_Destino, R.Id_Tipo_Motor, R.TipoViaje, R.KmP"& _ 
                "romedio, R.LtsPromedio, R.RangoPesoFin, R.RangoPesoIni, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "R.RendPromedio, R.CantViajes"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Cat_RendimientosEst AS R WITH (NOLOCK"& _ 
                ") INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      trafico_ruta AS TR WITH (NOLOCK) ON R.Id_Num"& _ 
                "_Origen = TR.origen_ruta AND R.Id_Num_Destino = TR.destino_ruta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (R.Id"& _ 
                "_Num_Origen = @Id_Num_Origen) AND (R.Id_Cliente = @Id_Cliente) AND (TR.id_ruta ="& _ 
                " @Id_Ruta)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Num_Origen", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Num_Origen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Cliente", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id_Cliente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id_Ruta", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "id_ruta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PI_Rendimientos.Cat_RendimientosEstDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As PI_Rendimientos.Cat_RendimientosEstDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As PI_Rendimientos.Cat_RendimientosEstDataTable = New PI_Rendimientos.Cat_RendimientosEstDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As PI_Rendimientos.Cat_RendimientosEstDataTable, ByVal Id_Num_Origen As Integer, ByVal Id_Cliente As Integer, ByVal Id_Ruta As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Id_Num_Origen,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id_Cliente,Integer)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Id_Ruta,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As PI_Rendimientos.Cat_RendimientosEstDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As PI_Rendimientos) As Integer
            Return Me.Adapter.Update(dataSet, "Cat_RendimientosEst")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Id_Num_Origen As Integer, ByVal Original_Id_Num_Destino As Integer, ByVal Original_Id_Cliente As Integer, ByVal Original_Id_Tipo_Motor As Integer, ByVal Original_TipoViaje As Integer, ByVal Original_RangoPesoIni As Integer, ByVal Original_RangoPesoFin As Global.System.Nullable(Of Integer), ByVal Original_KmPromedio As Global.System.Nullable(Of Decimal), ByVal Original_LtsPromedio As Global.System.Nullable(Of Decimal), ByVal Original_RendPromedio As Global.System.Nullable(Of Decimal), ByVal Original_CantViajes As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id_Num_Origen,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Id_Num_Destino,Integer)
            Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Id_Cliente,Integer)
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_Id_Tipo_Motor,Integer)
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TipoViaje,Integer)
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_RangoPesoIni,Integer)
            If (Original_RangoPesoFin.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_RangoPesoFin.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_KmPromedio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_KmPromedio.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_LtsPromedio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_LtsPromedio.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_RendPromedio.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_RendPromedio.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_CantViajes.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CantViajes.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id_Num_Origen As Integer, ByVal Id_Num_Destino As Integer, ByVal Id_Cliente As Integer, ByVal Id_Tipo_Motor As Integer, ByVal TipoViaje As Integer, ByVal RangoPesoIni As Integer, ByVal RangoPesoFin As Global.System.Nullable(Of Integer), ByVal KmPromedio As Global.System.Nullable(Of Decimal), ByVal LtsPromedio As Global.System.Nullable(Of Decimal), ByVal RendPromedio As Global.System.Nullable(Of Decimal), ByVal CantViajes As Global.System.Nullable(Of Integer), ByVal Fec_Movto As Global.System.Nullable(Of Date), ByVal UserId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Id_Num_Origen,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(Id_Num_Destino,Integer)
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(Id_Cliente,Integer)
            Me.Adapter.InsertCommand.Parameters(3).Value = CType(Id_Tipo_Motor,Integer)
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(TipoViaje,Integer)
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(RangoPesoIni,Integer)
            If (RangoPesoFin.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(RangoPesoFin.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (KmPromedio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(KmPromedio.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LtsPromedio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(LtsPromedio.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (RendPromedio.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(RendPromedio.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CantViajes.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CantViajes.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Fec_Movto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Fec_Movto.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UserId.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(UserId.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id_Num_Origen As Integer,  _
                    ByVal Id_Num_Destino As Integer,  _
                    ByVal Id_Cliente As Integer,  _
                    ByVal Id_Tipo_Motor As Integer,  _
                    ByVal TipoViaje As Integer,  _
                    ByVal RangoPesoIni As Integer,  _
                    ByVal RangoPesoFin As Global.System.Nullable(Of Integer),  _
                    ByVal KmPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal LtsPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal RendPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal CantViajes As Global.System.Nullable(Of Integer),  _
                    ByVal Fec_Movto As Global.System.Nullable(Of Date),  _
                    ByVal UserId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id_Num_Origen As Integer,  _
                    ByVal Original_Id_Num_Destino As Integer,  _
                    ByVal Original_Id_Cliente As Integer,  _
                    ByVal Original_Id_Tipo_Motor As Integer,  _
                    ByVal Original_TipoViaje As Integer,  _
                    ByVal Original_RangoPesoIni As Integer,  _
                    ByVal Original_RangoPesoFin As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KmPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LtsPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RendPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CantViajes As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Fec_Movto As Global.System.Nullable(Of Date),  _
                    ByVal Original_UserId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Id_Num_Origen,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id_Num_Destino,Integer)
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Id_Cliente,Integer)
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Id_Tipo_Motor,Integer)
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TipoViaje,Integer)
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(RangoPesoIni,Integer)
            If (RangoPesoFin.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(RangoPesoFin.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (KmPromedio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(KmPromedio.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LtsPromedio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(LtsPromedio.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (RendPromedio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(RendPromedio.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CantViajes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CantViajes.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Fec_Movto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Fec_Movto.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (UserId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(UserId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Id_Num_Origen,Integer)
            Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_Id_Num_Destino,Integer)
            Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Id_Cliente,Integer)
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_Id_Tipo_Motor,Integer)
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_TipoViaje,Integer)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_RangoPesoIni,Integer)
            If (Original_RangoPesoFin.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_RangoPesoFin.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_KmPromedio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_KmPromedio.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_LtsPromedio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_LtsPromedio.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_RendPromedio.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_RendPromedio.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CantViajes.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CantViajes.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_Fec_Movto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_Fec_Movto.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_UserId.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_UserId.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Id_Tipo_Motor As Integer,  _
                    ByVal RangoPesoFin As Global.System.Nullable(Of Integer),  _
                    ByVal KmPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal LtsPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal RendPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal CantViajes As Global.System.Nullable(Of Integer),  _
                    ByVal Fec_Movto As Global.System.Nullable(Of Date),  _
                    ByVal UserId As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Id_Num_Origen As Integer,  _
                    ByVal Original_Id_Num_Destino As Integer,  _
                    ByVal Original_Id_Cliente As Integer,  _
                    ByVal Original_Id_Tipo_Motor As Integer,  _
                    ByVal Original_TipoViaje As Integer,  _
                    ByVal Original_RangoPesoIni As Integer,  _
                    ByVal Original_RangoPesoFin As Global.System.Nullable(Of Integer),  _
                    ByVal Original_KmPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LtsPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RendPromedio As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CantViajes As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Fec_Movto As Global.System.Nullable(Of Date),  _
                    ByVal Original_UserId As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_Id_Num_Origen, Original_Id_Num_Destino, Original_Id_Cliente, Id_Tipo_Motor, Original_TipoViaje, Original_RangoPesoIni, RangoPesoFin, KmPromedio, LtsPromedio, RendPromedio, CantViajes, Fec_Movto, UserId, Original_Id_Num_Origen, Original_Id_Num_Destino, Original_Id_Cliente, Original_Id_Tipo_Motor, Original_TipoViaje, Original_RangoPesoIni, Original_RangoPesoFin, Original_KmPromedio, Original_LtsPromedio, Original_RendPromedio, Original_CantViajes, Original_Fec_Movto, Original_UserId)
        End Function
    End Class
End Namespace
