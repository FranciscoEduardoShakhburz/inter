'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("PI_Calidad"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class PI_Calidad
    Inherits Global.System.Data.DataSet
    
    Private tableUP_Consulta_ReporteCalidad_v2 As UP_Consulta_ReporteCalidad_v2DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("UP_Consulta_ReporteCalidad_v2")) Is Nothing) Then
                MyBase.Tables.Add(New UP_Consulta_ReporteCalidad_v2DataTable(ds.Tables("UP_Consulta_ReporteCalidad_v2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property UP_Consulta_ReporteCalidad_v2() As UP_Consulta_ReporteCalidad_v2DataTable
        Get
            Return Me.tableUP_Consulta_ReporteCalidad_v2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As PI_Calidad = CType(MyBase.Clone,PI_Calidad)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("UP_Consulta_ReporteCalidad_v2")) Is Nothing) Then
                MyBase.Tables.Add(New UP_Consulta_ReporteCalidad_v2DataTable(ds.Tables("UP_Consulta_ReporteCalidad_v2")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableUP_Consulta_ReporteCalidad_v2 = CType(MyBase.Tables("UP_Consulta_ReporteCalidad_v2"),UP_Consulta_ReporteCalidad_v2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableUP_Consulta_ReporteCalidad_v2) Is Nothing) Then
                Me.tableUP_Consulta_ReporteCalidad_v2.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "PI_Calidad"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/PI_Calidad.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableUP_Consulta_ReporteCalidad_v2 = New UP_Consulta_ReporteCalidad_v2DataTable
        MyBase.Tables.Add(Me.tableUP_Consulta_ReporteCalidad_v2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeUP_Consulta_ReporteCalidad_v2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As PI_Calidad = New PI_Calidad
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub UP_Consulta_ReporteCalidad_v2RowChangeEventHandler(ByVal sender As Object, ByVal e As UP_Consulta_ReporteCalidad_v2RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UP_Consulta_ReporteCalidad_v2DataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnFecha As Global.System.Data.DataColumn
        
        Private _columnNo__Eco As Global.System.Data.DataColumn
        
        Private columnOperador As Global.System.Data.DataColumn
        
        Private columnPlacas As Global.System.Data.DataColumn
        
        Private columnViaje As Global.System.Data.DataColumn
        
        Private columnReferencia As Global.System.Data.DataColumn
        
        Private columnCliente_Planta As Global.System.Data.DataColumn
        
        Private columnTalon_CP As Global.System.Data.DataColumn
        
        Private columnContenedores As Global.System.Data.DataColumn
        
        Private columnTipo_Oper As Global.System.Data.DataColumn
        
        Private columnDolly As Global.System.Data.DataColumn
        
        Private columnETA_Planta As Global.System.Data.DataColumn
        
        Private columnObservaciones As Global.System.Data.DataColumn
        
        Private columnTiempo As Global.System.Data.DataColumn
        
        Private columnTarde As Global.System.Data.DataColumn
        
        Private columnCont As Global.System.Data.DataColumn
        
        Private columnCG As Global.System.Data.DataColumn
        
        Private columnCamioneta As Global.System.Data.DataColumn
        
        Private columnDia As Global.System.Data.DataColumn
        
        Private columnDestino As Global.System.Data.DataColumn
        
        Private columnImpo As Global.System.Data.DataColumn
        
        Private columnExpo As Global.System.Data.DataColumn
        
        Private columnPerm As Global.System.Data.DataColumn
        
        Private columnExterno As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "UP_Consulta_ReporteCalidad_v2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FechaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFecha
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property _No__EcoColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnNo__Eco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PlacasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlacas
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ViajeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnViaje
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Cliente_PlantaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCliente_Planta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Talon_CPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTalon_CP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ContenedoresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenedores
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tipo_OperColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipo_Oper
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DollyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDolly
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ETA_PlantaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETA_Planta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TiempoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTiempo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TardeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarde
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ContColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCont
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CamionetaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCamioneta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DestinoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDestino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ImpoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImpo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExpoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PermColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPerm
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ExternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UP_Consulta_ReporteCalidad_v2Row
            Get
                Return CType(Me.Rows(index),UP_Consulta_ReporteCalidad_v2Row)
            End Get
        End Property
        
        Public Event UP_Consulta_ReporteCalidad_v2RowChanging As UP_Consulta_ReporteCalidad_v2RowChangeEventHandler
        
        Public Event UP_Consulta_ReporteCalidad_v2RowChanged As UP_Consulta_ReporteCalidad_v2RowChangeEventHandler
        
        Public Event UP_Consulta_ReporteCalidad_v2RowDeleting As UP_Consulta_ReporteCalidad_v2RowChangeEventHandler
        
        Public Event UP_Consulta_ReporteCalidad_v2RowDeleted As UP_Consulta_ReporteCalidad_v2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddUP_Consulta_ReporteCalidad_v2Row(ByVal row As UP_Consulta_ReporteCalidad_v2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddUP_Consulta_ReporteCalidad_v2Row( _
                    ByVal Fecha As Date,  _
                    ByVal _No__Eco As String,  _
                    ByVal Operador As String,  _
                    ByVal Placas As String,  _
                    ByVal Viaje As Integer,  _
                    ByVal Referencia As String,  _
                    ByVal Cliente_Planta As String,  _
                    ByVal Talon_CP As String,  _
                    ByVal Contenedores As String,  _
                    ByVal Tipo_Oper As String,  _
                    ByVal Dolly As String,  _
                    ByVal ETA_Planta As String,  _
                    ByVal Observaciones As String,  _
                    ByVal Tiempo As String,  _
                    ByVal Tarde As String,  _
                    ByVal Cont As String,  _
                    ByVal CG As String,  _
                    ByVal Camioneta As String,  _
                    ByVal Dia As String,  _
                    ByVal Destino As String,  _
                    ByVal Impo As Byte,  _
                    ByVal Expo As Byte,  _
                    ByVal Perm As Byte,  _
                    ByVal Externo As Byte) As UP_Consulta_ReporteCalidad_v2Row
            Dim rowUP_Consulta_ReporteCalidad_v2Row As UP_Consulta_ReporteCalidad_v2Row = CType(Me.NewRow,UP_Consulta_ReporteCalidad_v2Row)
            Dim columnValuesArray() As Object = New Object() {Fecha, _No__Eco, Operador, Placas, Viaje, Referencia, Cliente_Planta, Talon_CP, Contenedores, Tipo_Oper, Dolly, ETA_Planta, Observaciones, Tiempo, Tarde, Cont, CG, Camioneta, Dia, Destino, Impo, Expo, Perm, Externo}
            rowUP_Consulta_ReporteCalidad_v2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowUP_Consulta_ReporteCalidad_v2Row)
            Return rowUP_Consulta_ReporteCalidad_v2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UP_Consulta_ReporteCalidad_v2DataTable = CType(MyBase.Clone,UP_Consulta_ReporteCalidad_v2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UP_Consulta_ReporteCalidad_v2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnFecha = MyBase.Columns("Fecha")
            Me._columnNo__Eco = MyBase.Columns("No. Eco")
            Me.columnOperador = MyBase.Columns("Operador")
            Me.columnPlacas = MyBase.Columns("Placas")
            Me.columnViaje = MyBase.Columns("Viaje")
            Me.columnReferencia = MyBase.Columns("Referencia")
            Me.columnCliente_Planta = MyBase.Columns("Cliente Planta")
            Me.columnTalon_CP = MyBase.Columns("Talon CP")
            Me.columnContenedores = MyBase.Columns("Contenedores")
            Me.columnTipo_Oper = MyBase.Columns("Tipo Oper")
            Me.columnDolly = MyBase.Columns("Dolly")
            Me.columnETA_Planta = MyBase.Columns("ETA Planta")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnTiempo = MyBase.Columns("Tiempo")
            Me.columnTarde = MyBase.Columns("Tarde")
            Me.columnCont = MyBase.Columns("Cont")
            Me.columnCG = MyBase.Columns("CG")
            Me.columnCamioneta = MyBase.Columns("Camioneta")
            Me.columnDia = MyBase.Columns("Dia")
            Me.columnDestino = MyBase.Columns("Destino")
            Me.columnImpo = MyBase.Columns("Impo")
            Me.columnExpo = MyBase.Columns("Expo")
            Me.columnPerm = MyBase.Columns("Perm")
            Me.columnExterno = MyBase.Columns("Externo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnFecha = New Global.System.Data.DataColumn("Fecha", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFecha)
            Me._columnNo__Eco = New Global.System.Data.DataColumn("No. Eco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnNo__Eco.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnNo__Eco")
            Me._columnNo__Eco.ExtendedProperties.Add("Generator_UserColumnName", "No. Eco")
            MyBase.Columns.Add(Me._columnNo__Eco)
            Me.columnOperador = New Global.System.Data.DataColumn("Operador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperador)
            Me.columnPlacas = New Global.System.Data.DataColumn("Placas", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlacas)
            Me.columnViaje = New Global.System.Data.DataColumn("Viaje", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnViaje)
            Me.columnReferencia = New Global.System.Data.DataColumn("Referencia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferencia)
            Me.columnCliente_Planta = New Global.System.Data.DataColumn("Cliente Planta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCliente_Planta)
            Me.columnTalon_CP = New Global.System.Data.DataColumn("Talon CP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTalon_CP)
            Me.columnContenedores = New Global.System.Data.DataColumn("Contenedores", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenedores)
            Me.columnTipo_Oper = New Global.System.Data.DataColumn("Tipo Oper", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipo_Oper)
            Me.columnDolly = New Global.System.Data.DataColumn("Dolly", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDolly)
            Me.columnETA_Planta = New Global.System.Data.DataColumn("ETA Planta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETA_Planta)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnTiempo = New Global.System.Data.DataColumn("Tiempo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTiempo)
            Me.columnTarde = New Global.System.Data.DataColumn("Tarde", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarde)
            Me.columnCont = New Global.System.Data.DataColumn("Cont", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCont)
            Me.columnCG = New Global.System.Data.DataColumn("CG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCG)
            Me.columnCamioneta = New Global.System.Data.DataColumn("Camioneta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCamioneta)
            Me.columnDia = New Global.System.Data.DataColumn("Dia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDia)
            Me.columnDestino = New Global.System.Data.DataColumn("Destino", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDestino)
            Me.columnImpo = New Global.System.Data.DataColumn("Impo", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImpo)
            Me.columnExpo = New Global.System.Data.DataColumn("Expo", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpo)
            Me.columnPerm = New Global.System.Data.DataColumn("Perm", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPerm)
            Me.columnExterno = New Global.System.Data.DataColumn("Externo", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExterno)
            Me._columnNo__Eco.MaxLength = 10
            Me.columnOperador.MaxLength = 80
            Me.columnPlacas.MaxLength = 20
            Me.columnReferencia.MaxLength = 250
            Me.columnCliente_Planta.ReadOnly = true
            Me.columnCliente_Planta.MaxLength = 25
            Me.columnTalon_CP.MaxLength = 50
            Me.columnContenedores.MaxLength = 300
            Me.columnTipo_Oper.ReadOnly = true
            Me.columnTipo_Oper.MaxLength = 4
            Me.columnDolly.ReadOnly = true
            Me.columnDolly.MaxLength = 1
            Me.columnETA_Planta.ReadOnly = true
            Me.columnETA_Planta.MaxLength = 1
            Me.columnObservaciones.ReadOnly = true
            Me.columnObservaciones.MaxLength = 1
            Me.columnTiempo.ReadOnly = true
            Me.columnTiempo.MaxLength = 1
            Me.columnTarde.ReadOnly = true
            Me.columnTarde.MaxLength = 1
            Me.columnCont.ReadOnly = true
            Me.columnCont.MaxLength = 1
            Me.columnCG.ReadOnly = true
            Me.columnCG.MaxLength = 1
            Me.columnCamioneta.ReadOnly = true
            Me.columnCamioneta.MaxLength = 1
            Me.columnDia.ReadOnly = true
            Me.columnDia.MaxLength = 9
            Me.columnDestino.MaxLength = 70
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewUP_Consulta_ReporteCalidad_v2Row() As UP_Consulta_ReporteCalidad_v2Row
            Return CType(Me.NewRow,UP_Consulta_ReporteCalidad_v2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UP_Consulta_ReporteCalidad_v2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UP_Consulta_ReporteCalidad_v2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UP_Consulta_ReporteCalidad_v2RowChangedEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_ReporteCalidad_v2RowChanged(Me, New UP_Consulta_ReporteCalidad_v2RowChangeEvent(CType(e.Row,UP_Consulta_ReporteCalidad_v2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UP_Consulta_ReporteCalidad_v2RowChangingEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_ReporteCalidad_v2RowChanging(Me, New UP_Consulta_ReporteCalidad_v2RowChangeEvent(CType(e.Row,UP_Consulta_ReporteCalidad_v2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UP_Consulta_ReporteCalidad_v2RowDeletedEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_ReporteCalidad_v2RowDeleted(Me, New UP_Consulta_ReporteCalidad_v2RowChangeEvent(CType(e.Row,UP_Consulta_ReporteCalidad_v2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UP_Consulta_ReporteCalidad_v2RowDeletingEvent) Is Nothing) Then
                RaiseEvent UP_Consulta_ReporteCalidad_v2RowDeleting(Me, New UP_Consulta_ReporteCalidad_v2RowChangeEvent(CType(e.Row,UP_Consulta_ReporteCalidad_v2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveUP_Consulta_ReporteCalidad_v2Row(ByVal row As UP_Consulta_ReporteCalidad_v2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As PI_Calidad = New PI_Calidad
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UP_Consulta_ReporteCalidad_v2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class UP_Consulta_ReporteCalidad_v2Row
        Inherits Global.System.Data.DataRow
        
        Private tableUP_Consulta_ReporteCalidad_v2 As UP_Consulta_ReporteCalidad_v2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUP_Consulta_ReporteCalidad_v2 = CType(Me.Table,UP_Consulta_ReporteCalidad_v2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Fecha() As Date
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.FechaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fecha' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.FechaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property _No__Eco() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2._No__EcoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No. Eco' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2._No__EcoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Operador() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.OperadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operador' in table 'UP_Consulta_ReporteCalidad_v2' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.OperadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Placas() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.PlacasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Placas' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.PlacasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Viaje() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ViajeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Viaje' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ViajeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Referencia() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ReferenciaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Referencia' in table 'UP_Consulta_ReporteCalidad_v2' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ReferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cliente_Planta() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.Cliente_PlantaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cliente Planta' in table 'UP_Consulta_ReporteCalidad_v2' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.Cliente_PlantaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Talon_CP() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.Talon_CPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Talon CP' in table 'UP_Consulta_ReporteCalidad_v2' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.Talon_CPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Contenedores() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ContenedoresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Contenedores' in table 'UP_Consulta_ReporteCalidad_v2' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ContenedoresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tipo_Oper() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.Tipo_OperColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tipo Oper' in table 'UP_Consulta_ReporteCalidad_v2' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.Tipo_OperColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Dolly() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.DollyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dolly' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.DollyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ETA_Planta() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ETA_PlantaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ETA Planta' in table 'UP_Consulta_ReporteCalidad_v2' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ETA_PlantaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Observaciones() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ObservacionesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Observaciones' in table 'UP_Consulta_ReporteCalidad_v2' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ObservacionesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tiempo() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.TiempoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tiempo' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.TiempoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarde() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.TardeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarde' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.TardeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Cont() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ContColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cont' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ContColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CG() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.CGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CG' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.CGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Camioneta() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.CamionetaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Camioneta' in table 'UP_Consulta_ReporteCalidad_v2' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.CamionetaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Dia() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.DiaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dia' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.DiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Destino() As String
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.DestinoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Destino' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.DestinoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Impo() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ImpoColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Impo' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ImpoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Expo() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ExpoColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expo' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ExpoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Perm() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.PermColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Perm' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.PermColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Externo() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableUP_Consulta_ReporteCalidad_v2.ExternoColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Externo' in table 'UP_Consulta_ReporteCalidad_v2' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableUP_Consulta_ReporteCalidad_v2.ExternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFechaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.FechaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFechaNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.FechaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Is_No__EcoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2._No__EcoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Set_No__EcoNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2._No__EcoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperadorNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.OperadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperadorNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.OperadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPlacasNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.PlacasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPlacasNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.PlacasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsViajeNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ViajeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetViajeNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ViajeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReferenciaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ReferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReferenciaNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ReferenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCliente_PlantaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.Cliente_PlantaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCliente_PlantaNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.Cliente_PlantaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTalon_CPNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.Talon_CPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTalon_CPNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.Talon_CPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContenedoresNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ContenedoresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContenedoresNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ContenedoresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTipo_OperNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.Tipo_OperColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTipo_OperNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.Tipo_OperColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDollyNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.DollyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDollyNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.DollyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsETA_PlantaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ETA_PlantaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetETA_PlantaNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ETA_PlantaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ObservacionesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetObservacionesNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTiempoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.TiempoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTiempoNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.TiempoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTardeNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.TardeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTardeNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.TardeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsContNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ContColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetContNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ContColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCGNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.CGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCGNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.CGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCamionetaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.CamionetaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCamionetaNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.CamionetaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDiaNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.DiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDiaNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.DiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDestinoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.DestinoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDestinoNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.DestinoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsImpoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ImpoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetImpoNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ImpoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExpoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ExpoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExpoNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ExpoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPermNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.PermColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPermNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.PermColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsExternoNull() As Boolean
            Return Me.IsNull(Me.tableUP_Consulta_ReporteCalidad_v2.ExternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetExternoNull()
            Me(Me.tableUP_Consulta_ReporteCalidad_v2.ExternoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class UP_Consulta_ReporteCalidad_v2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UP_Consulta_ReporteCalidad_v2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As UP_Consulta_ReporteCalidad_v2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As UP_Consulta_ReporteCalidad_v2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace PI_CalidadTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UP_Consulta_ReporteCalidad_v2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "UP_Consulta_ReporteCalidad_v2"
            tableMapping.ColumnMappings.Add("Fecha", "Fecha")
            tableMapping.ColumnMappings.Add("No. Eco", "No. Eco")
            tableMapping.ColumnMappings.Add("Operador", "Operador")
            tableMapping.ColumnMappings.Add("Placas", "Placas")
            tableMapping.ColumnMappings.Add("Viaje", "Viaje")
            tableMapping.ColumnMappings.Add("Referencia", "Referencia")
            tableMapping.ColumnMappings.Add("Cliente Planta", "Cliente Planta")
            tableMapping.ColumnMappings.Add("Talon CP", "Talon CP")
            tableMapping.ColumnMappings.Add("Contenedores", "Contenedores")
            tableMapping.ColumnMappings.Add("Tipo Oper", "Tipo Oper")
            tableMapping.ColumnMappings.Add("Dolly", "Dolly")
            tableMapping.ColumnMappings.Add("ETA Planta", "ETA Planta")
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones")
            tableMapping.ColumnMappings.Add("Tiempo", "Tiempo")
            tableMapping.ColumnMappings.Add("Tarde", "Tarde")
            tableMapping.ColumnMappings.Add("Cont", "Cont")
            tableMapping.ColumnMappings.Add("CG", "CG")
            tableMapping.ColumnMappings.Add("Camioneta", "Camioneta")
            tableMapping.ColumnMappings.Add("Dia", "Dia")
            tableMapping.ColumnMappings.Add("Destino", "Destino")
            tableMapping.ColumnMappings.Add("Impo", "Impo")
            tableMapping.ColumnMappings.Add("Expo", "Expo")
            tableMapping.ColumnMappings.Add("Perm", "Perm")
            tableMapping.ColumnMappings.Add("Externo", "Externo")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Interflet.MySettings.Default.InterfletDB_CatConceptos
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.UP_Consulta_ReporteCalidad_v2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@tipo", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As PI_Calidad.UP_Consulta_ReporteCalidad_v2DataTable, ByVal FechaIni As Global.System.Nullable(Of Date), ByVal FechaFin As Global.System.Nullable(Of Date), ByVal Area As Global.System.Nullable(Of Integer), ByVal tipo As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FechaIni.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FechaFin.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Area.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Area.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (tipo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(tipo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FechaIni As Global.System.Nullable(Of Date), ByVal FechaFin As Global.System.Nullable(Of Date), ByVal Area As Global.System.Nullable(Of Integer), ByVal tipo As Global.System.Nullable(Of Integer)) As PI_Calidad.UP_Consulta_ReporteCalidad_v2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FechaIni.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FechaFin.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Area.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Area.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (tipo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(tipo.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As PI_Calidad.UP_Consulta_ReporteCalidad_v2DataTable = New PI_Calidad.UP_Consulta_ReporteCalidad_v2DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
